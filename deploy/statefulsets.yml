kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mlx-rabbitmq
  labels:
    app: mlx
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mlx-rabbitmq
  template:
    metadata:
      creationTimestamp: null
      labels:
        deploy: mlx-rabbitmq
        name: mlx-rabbitmq
    spec:
      restartPolicy: Always
      initContainers:
        - name: rabbitmq-config
          image: >-
            $(IMAGE)
          command:
            - sh
            - '-c'
            - >-
              cp /tmp/rabbitmq/rabbitmq.conf /etc/rabbitmq/rabbitmq.conf && echo
              '' >> /etc/rabbitmq/rabbitmq.conf; cp
              /tmp/rabbitmq/enabled_plugins /etc/rabbitmq/enabled_plugins
          resources: {}
          volumeMounts:
            - name: rabbitmq-config
              mountPath: /tmp/rabbitmq
            - name: rabbitmq-config-rw
              mountPath: /etc/rabbitmq
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      serviceAccountName: rabbitmq
      priority: 0
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: '1'
              memory: 1Gi
          readinessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - >
                    if [ -z "$(grep rabbitmq /etc/resolv.conf)" ]; then
                      sed "s/^search \([^ ]\+\)/search rabbitmq.\1 \1/" /etc/resolv.conf > /etc/resolv.conf.new;
                      cat /etc/resolv.conf.new > /etc/resolv.conf;
                      rm /etc/resolv.conf.new;
                    fi; until rabbitmqctl node_health_check; do sleep 1; done;
                    if [[ "$HOSTNAME" != "rabbitmq-0" && -z "$(rabbitmqctl
                    cluster_status | grep rabbitmq-0)" ]]; then
                      rabbitmqctl stop_app;
                      rabbitmqctl join_cluster rabbit@rabbitmq-0;
                      rabbitmqctl start_app;
                    fi; rabbitmqctl set_policy ha-all "."
                    '{"ha-mode":"exactly","ha-params":3,"ha-sync-mode":"automatic"}'
          name: rabbitmq-client
          livenessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: rabbitmq-headless
            - name: RABBITMQ_USE_LONGNAME
              value: 'true'
            - name: RABBITMQ_NODENAME
              value: >-
                rabbit@$(HOSTNAME).$(K8S_SERVICE_NAME).$(NAMESPACE).svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .$(K8S_SERVICE_NAME).$(NAMESPACE).svc.cluster.local
          ports:
            - containerPort: 5671
              protocol: TCP
            - containerPort: 4369
              protocol: TCP
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
            - containerPort: 25672
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: rabbitmq-config-rw
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: rabbitmq-certs-vols
              readOnly: true
              mountPath: /opt/ssl/certs
          terminationMessagePolicy: File
          image: >-
            $(IMAGE)
      automountServiceAccountToken: true
      serviceAccount: rabbitmq
      volumes:
        - name: rabbitmq-config
          configMap:
            name: rabbitmq-config
            items:
              - key: enabled_plugins
                path: enabled_plugins
              - key: rabbitmq.conf
                path: rabbitmq.conf
            defaultMode: 420
            optional: false
        - name: rabbitmq-config-rw
          emptyDir: {}
        - name: rabbitmq-certs-vols
          secret:
            secretName: mlx-rabbitmq-mq-certs
            items:
              - key: crt
                path: crt.pem
              - key: key
                path: key.pem
              - key: trusted_crt
                path: trusted_crt.pem
            defaultMode: 288
      dnsPolicy: ClusterFirst
  serviceName: rabbitmq-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
